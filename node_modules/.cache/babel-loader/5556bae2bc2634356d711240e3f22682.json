{"ast":null,"code":"var _jsxFileName = \"/home/pratyaksh_chandra/personal/firegram/src/comps/UploadForm.js\";\nimport React, { useState } from \"react\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg'];\n\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(null);\n    } else {\n      setFile(null);\n      setError(\"File Not Supported\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, error), file && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, file.name)));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/home/pratyaksh_chandra/personal/firegram/src/comps/UploadForm.js"],"names":["React","useState","UploadForm","file","setFile","error","setError","types","changeHandler","e","selected","target","files","includes","type","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd;;AAGA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;;AACA,QAAGF,QAAQ,IAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAf,EAA6C;AACzCV,MAAAA,OAAO,CAACM,QAAD,CAAP;AACAJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAHD,MAII;AACAF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACH;AACJ,GAVD;;AAYA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADA,eAKA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADb,EAEIF,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACY,IAAZ,CAFZ,CALA,CADJ;AAYH,CAhCD;;AAkCA,eAAeb,UAAf","sourcesContent":["import React, {useState} from \"react\"\n\nconst UploadForm = () => {\n\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        if(selected && types.includes(selected.type)){\n            setFile(selected)\n            setError(null)\n        }\n        else{\n            setFile(null)\n            setError(\"File Not Supported\")\n        }\n    }\n\n    return (\n        <form>\n        <label>\n          <input type=\"file\" onChange={changeHandler} />\n          <span>+</span>\n        </label>\n        <div className=\"output\">\n          { error && <div className=\"error\">{ error }</div>}\n          { file && <div>{ file.name }</div> }\n        </div>\n      </form>\n    )\n}\n\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}